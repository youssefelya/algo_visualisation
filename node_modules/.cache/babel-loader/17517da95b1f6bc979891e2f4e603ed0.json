{"ast":null,"code":"export function quickSort(array, left, right) {\n  const animations = [];\n  var index;\n\n  if (array.length > 1) {\n    index = partition(array, left, right, animations);\n    animations.push([left, right, index]);\n\n    if (left < index - 1) {\n      animations.push([left, right, index]);\n      quickSort(array, left, index - 1);\n    }\n\n    if (index < right) {\n      animations.push(left, right, index);\n      quickSort(array, index, right);\n    }\n  }\n\n  return animations;\n}\n\nfunction partition(items, left, right, animations) {\n  var pivot = items[Math.floor((right + left) / 2)],\n      i = left,\n      j = right;\n\n  while (i <= j) {\n    while (items[i] < pivot) {\n      i++;\n    }\n\n    while (items[j] > pivot) {\n      j--;\n    }\n\n    if (i <= j) {\n      swap(items, i, j);\n      animations.push(i, j, items[j]);\n      i++;\n      j--;\n    }\n  }\n\n  return i;\n}\n\nfunction swap(items, firstIndex, secondIndex) {\n  var temp = items[firstIndex];\n  items[firstIndex] = items[secondIndex];\n  items[secondIndex] = temp;\n}","map":{"version":3,"sources":["C:/Users/Youssef/Desktop/Cr/visialisation/sorting-visualisation/src/sortingAlgorithms/algorithm/quickSort.js"],"names":["quickSort","array","left","right","animations","index","length","partition","push","items","pivot","Math","floor","i","j","swap","firstIndex","secondIndex","temp"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuC;AAC5C,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAIC,KAAJ;;AACA,MAAIJ,KAAK,CAACK,MAAN,GAAe,CAAnB,EAAsB;AACpBD,IAAAA,KAAK,GAAGE,SAAS,CAACN,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,UAArB,CAAjB;AACAA,IAAAA,UAAU,CAACI,IAAX,CAAgB,CAACN,IAAD,EAAOC,KAAP,EAAcE,KAAd,CAAhB;;AACA,QAAIH,IAAI,GAAGG,KAAK,GAAG,CAAnB,EAAsB;AACpBD,MAAAA,UAAU,CAACI,IAAX,CAAgB,CAACN,IAAD,EAAOC,KAAP,EAAcE,KAAd,CAAhB;AACAL,MAAAA,SAAS,CAACC,KAAD,EAAQC,IAAR,EAAcG,KAAK,GAAG,CAAtB,CAAT;AACD;;AAED,QAAIA,KAAK,GAAGF,KAAZ,EAAmB;AACjBC,MAAAA,UAAU,CAACI,IAAX,CAAgBN,IAAhB,EAAsBC,KAAtB,EAA6BE,KAA7B;AACAL,MAAAA,SAAS,CAACC,KAAD,EAAQI,KAAR,EAAeF,KAAf,CAAT;AACD;AACF;;AACD,SAAOC,UAAP;AACD;;AAED,SAASG,SAAT,CAAmBE,KAAnB,EAA0BP,IAA1B,EAAgCC,KAAhC,EAAuCC,UAAvC,EAAmD;AACjD,MAAIM,KAAK,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAL,CAAW,CAACT,KAAK,GAAGD,IAAT,IAAiB,CAA5B,CAAD,CAAjB;AAAA,MACEW,CAAC,GAAGX,IADN;AAAA,MAEEY,CAAC,GAAGX,KAFN;;AAIA,SAAOU,CAAC,IAAIC,CAAZ,EAAe;AACb,WAAOL,KAAK,CAACI,CAAD,CAAL,GAAWH,KAAlB,EAAyB;AACvBG,MAAAA,CAAC;AACF;;AAED,WAAOJ,KAAK,CAACK,CAAD,CAAL,GAAWJ,KAAlB,EAAyB;AACvBI,MAAAA,CAAC;AACF;;AAED,QAAID,CAAC,IAAIC,CAAT,EAAY;AACVC,MAAAA,IAAI,CAACN,KAAD,EAAQI,CAAR,EAAWC,CAAX,CAAJ;AACAV,MAAAA,UAAU,CAACI,IAAX,CAAgBK,CAAhB,EAAmBC,CAAnB,EAAsBL,KAAK,CAACK,CAAD,CAA3B;AACAD,MAAAA,CAAC;AACDC,MAAAA,CAAC;AACF;AACF;;AAED,SAAOD,CAAP;AACD;;AACD,SAASE,IAAT,CAAcN,KAAd,EAAqBO,UAArB,EAAiCC,WAAjC,EAA8C;AAC5C,MAAIC,IAAI,GAAGT,KAAK,CAACO,UAAD,CAAhB;AACAP,EAAAA,KAAK,CAACO,UAAD,CAAL,GAAoBP,KAAK,CAACQ,WAAD,CAAzB;AACAR,EAAAA,KAAK,CAACQ,WAAD,CAAL,GAAqBC,IAArB;AACD","sourcesContent":["export function quickSort(array, left, right) {\n  const animations = [];\n  var index;\n  if (array.length > 1) {\n    index = partition(array, left, right, animations);\n    animations.push([left, right, index]);\n    if (left < index - 1) {\n      animations.push([left, right, index]);\n      quickSort(array, left, index - 1);\n    }\n\n    if (index < right) {\n      animations.push(left, right, index);\n      quickSort(array, index, right);\n    }\n  }\n  return animations;\n}\n\nfunction partition(items, left, right, animations) {\n  var pivot = items[Math.floor((right + left) / 2)],\n    i = left,\n    j = right;\n\n  while (i <= j) {\n    while (items[i] < pivot) {\n      i++;\n    }\n\n    while (items[j] > pivot) {\n      j--;\n    }\n\n    if (i <= j) {\n      swap(items, i, j);\n      animations.push(i, j, items[j]);\n      i++;\n      j--;\n    }\n  }\n\n  return i;\n}\nfunction swap(items, firstIndex, secondIndex) {\n  var temp = items[firstIndex];\n  items[firstIndex] = items[secondIndex];\n  items[secondIndex] = temp;\n}\n"]},"metadata":{},"sourceType":"module"}