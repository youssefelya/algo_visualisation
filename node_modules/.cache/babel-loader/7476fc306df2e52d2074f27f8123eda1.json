{"ast":null,"code":"export function quickSort(array, left, right) {\n  const animations = [];\n  var index;\n\n  if (array.length > 1) {\n    index = partition(array, left, right)[0];\n    const rest = partition(array, left, right)[1];\n    console.log(' first  ', [left, right, index]);\n    animations.push([left, right, index]);\n    rest.map(value => {\n      animations.push(value);\n    });\n\n    if (left < index - 1) {\n      console.log('secon ', [left, right, index]);\n      animations.push([left, right, index]);\n      quickSort(array, left, index - 1);\n    }\n\n    if (index < right) {\n      console.log('third', [left, right, index]);\n      animations.push([left, right, index]);\n      quickSort(array, index, right);\n    }\n  }\n\n  return animations;\n}\n\nfunction partition(items, left, right) {\n  const result = [];\n  const animations = [];\n  var pivot = items[Math.floor((right + left) / 2)],\n      i = left,\n      j = right;\n\n  while (i <= j) {\n    while (items[i] < pivot) {\n      i++;\n    }\n\n    while (items[j] > pivot) {\n      j--;\n    }\n\n    if (i <= j) {\n      swap(items, i, j);\n      console.log('fourth ', [i, j, items[j]]);\n      animations.push([i, j, items[j]]);\n      i++;\n      j--;\n    }\n  }\n\n  result.push(i);\n  result.push(animations);\n  return result;\n}\n\nfunction swap(items, firstIndex, secondIndex) {\n  var temp = items[firstIndex];\n  items[firstIndex] = items[secondIndex];\n  items[secondIndex] = temp;\n}","map":{"version":3,"sources":["C:/Users/Youssef/Desktop/Cr/visialisation/sorting-visualisation/src/sortingAlgorithms/algorithm/quickSort.js"],"names":["quickSort","array","left","right","animations","index","length","partition","rest","console","log","push","map","value","items","result","pivot","Math","floor","i","j","swap","firstIndex","secondIndex","temp"],"mappings":"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","sourcesContent":["export function quickSort(array, left, right) {\n  const animations = [];\n  var index;\n  if (array.length > 1) {\n    index = partition(array, left, right)[0];\n    const rest = partition(array, left, right)[1];\n    console.log(' first  ', [left, right, index]);\n    animations.push([left, right, index]);\n    rest.map(value => {\n      animations.push(value);\n    });\n\n    if (left < index - 1) {\n      console.log('secon ', [left, right, index]);\n      animations.push([left, right, index]);\n      quickSort(array, left, index - 1);\n    }\n\n    if (index < right) {\n      console.log('third', [left, right, index]);\n      animations.push([left, right, index]);\n      quickSort(array, index, right);\n    }\n  }\n  return animations;\n}\n\nfunction partition(items, left, right) {\n  const result = [];\n  const animations = [];\n  var pivot = items[Math.floor((right + left) / 2)],\n    i = left,\n    j = right;\n\n  while (i <= j) {\n    while (items[i] < pivot) {\n      i++;\n    }\n\n    while (items[j] > pivot) {\n      j--;\n    }\n\n    if (i <= j) {\n      swap(items, i, j);\n      console.log('fourth ', [i, j, items[j]]);\n      animations.push([i, j, items[j]]);\n      i++;\n      j--;\n    }\n  }\n  result.push(i);\n  result.push(animations);\n  return result;\n}\nfunction swap(items, firstIndex, secondIndex) {\n  var temp = items[firstIndex];\n  items[firstIndex] = items[secondIndex];\n  items[secondIndex] = temp;\n}\n"]},"metadata":{},"sourceType":"module"}